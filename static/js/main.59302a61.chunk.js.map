{"version":3,"sources":["redux/hooks.ts","redux/features/auth.ts","screen/LoginScreen.tsx","services/postsApi.ts","redux/features/feed.ts","form/CreatePostForm.tsx","feed/EditPostController.tsx","utils/StandardDialog.tsx","feed/DeletePostController.tsx","feed/FeedItem.tsx","feed/FeedInfiniteList.tsx","feed/PostFeed.tsx","feed/CreatePostController.tsx","screen/HomeScreen.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx"],"names":["useAppDispatch","useDispatch","useAppSelector","useSelector","initialState","username","authSlice","createSlice","name","reducers","login","state","action","payload","Error","logout","isLoggedIn","auth","actions","LoginScreen","React","useState","setUsername","dispatch","className","onSubmit","e","preventDefault","trim","htmlFor","id","type","maxLength","placeholder","value","onChange","target","required","classnames","api","Axios","create","baseURL","getCareers","a","limit","offset","get","createCareer","data","post","editCareer","patch","deleteCareer","delete","status","error","undefined","next","posts","loadFeed","createAsyncThunk","_","thunk","getState","feed","results","count","previous","response","createPost","editPost","deletePost","feedSlice","extraReducers","builder","addCase","pending","fulfilled","push","searchParams","URL","parseInt","String","rejected","message","length","map","filter","meta","arg","CreatePostForm","title","content","setTitle","setContent","EditPostController","dismiss","originalData","resetState","useEffect","then","onClick","StandardDialog","visible","setVisible","children","appear","show","as","Fragment","onClose","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Overlay","style","background","aria-hidden","Title","DeletePostController","FeedItem","created_datetime","isAuthor","s","humanDate","useMemo","humanizeDuration","Date","now","largest","units","showDelete","setShowDelete","showEdit","setShowEdit","xmlns","width","height","viewBox","fill","d","dateTime","FeedInfiniteList","hasMore","isLoadingMore","items","loadMore","renderItem","itemCount","ref","useRef","setHeight","timeout","setInterval","current","offsetHeight","clearInterval","isItemLoaded","index","loadMoreItems","threshold","onItemsRendered","itemSize","PostFeed","CreatePostController","hasAutoclosed","setHasAutoclosed","open","setOpen","interval","Button","Panel","static","HomeScreen","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.59302a61.chunk.js","sourcesContent":["import {TypedUseSelectorHook, useDispatch, useSelector} from \"react-redux\";\nimport {AppDispatch, RootState} from \"./store\";\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\nimport {RootState} from \"../store\";\n\ninterface AuthState {\n  username: string\n}\n\nconst initialState: AuthState = {\n  username: ''\n}\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    login(state, action: PayloadAction<{ username: string }>) {\n      if (!action.payload.username) throw new Error('Empty username cannot be set')\n      state.username = action.payload.username\n    },\n    logout(state) {\n      state.username = initialState.username\n    }\n  }\n})\n\nexport function isLoggedIn(state: RootState) {\n  return state.auth.username !== initialState.username\n}\n\nexport const { login, logout }  = authSlice.actions\nexport default authSlice.reducer\n","import React, {FormEvent} from 'react';\nimport classnames from 'classnames';\nimport {useAppDispatch} from \"../redux/hooks\";\nimport {login} from \"../redux/features/auth\";\n\nexport default function LoginScreen() {\n  const [username, setUsername] = React.useState('')\n  const dispatch = useAppDispatch()\n\n  function handleSubmit(e: FormEvent) {\n    e.preventDefault()\n    dispatch(login({ username: username.trim() }))\n  }\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center py-12 sm:px-4 sm:px-6 lg:px-8\">\n      <div className=\"p-5 max-w-md w-full space-y-8 sm:shadow-lg bg-gray-50 sm:border sm:border-gray-200\">\n        <h1 className=\"text-2xl font-extrabold text-gray-900\">Welcome to CodeLeap network!</h1>\n        <form onSubmit={handleSubmit}>\n          <label htmlFor=\"username\">Please enter your username</label>\n          <input\n            id=\"username\"\n            type=\"text\"\n            maxLength={16}\n            placeholder=\"John Doe\"\n            className=\"mt-3 appearance-none rounded-sm relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 focus:z-10 sm:text-sm\"\n            value={username}\n            onChange={e => setUsername(e.target.value)}\n            required\n          />\n          <input\n            type=\"submit\"\n            value=\"ENTER\"\n            className={\n              classnames(\n                \"float-right mt-3 px-8 py-2 bg-black text-white font-bold cursor-pointer transition\",\n                {\n                  \"bg-gray-600\": !username.trim()\n                }\n              )\n            }\n          />\n        </form>\n      </div>\n    </div>\n  )\n}\n","import Axios, {AxiosResponse} from 'axios'\n\nconst api = Axios.create({\n  baseURL: process.env.REACT_APP_POSTS_API_HOST + '/careers/'\n})\n\n\nexport interface CareerEdit {\n  title: string\n  content: string\n}\n\nexport interface CareerIn extends CareerEdit {\n  username: string\n}\n\nexport interface Career extends CareerIn {\n  id: string\n  created_datetime: string\n}\n\nexport interface CareersPaginator {\n  count: number\n  next: string | null\n  previous: string | null\n  results: Career[]\n}\n\nexport async function getCareers({ limit, offset }: { limit: number, offset: number }) {\n  return api.get<never, AxiosResponse<CareersPaginator>>(`/?limit=${limit}&offset=${offset}`)\n}\n\nexport async function getCareer(id: string) {\n  return api.get<never, AxiosResponse<Career>>(`/${id}`)\n}\n\nexport async function createCareer(data: CareerIn) {\n  return api.post<CareerIn, AxiosResponse<Career>>(`/`, data)\n}\n\nexport async function editCareer(id: string, data: CareerEdit) {\n  return api.patch<CareerEdit, AxiosResponse<Career>>(`/${id}/`, data)\n}\n\nexport async function deleteCareer(id: string) {\n  return api.delete<never, AxiosResponse<undefined>>(`/${id}`)\n}\n","import {createAsyncThunk, createSlice} from \"@reduxjs/toolkit\";\nimport {\n  Career,\n  CareerEdit,\n  CareerIn,\n  CareersPaginator,\n  createCareer,\n  deleteCareer,\n  editCareer,\n  getCareers\n} from \"../../services/postsApi\";\nimport {RootState} from \"../store\";\n\ninterface FeedState {\n  status: 'IDLE' | 'LOADING' | 'SUCCEEDED' | 'FAILED'\n  error?: string\n  next?: { limit: number, offset: number }\n  posts: Career[]\n}\n\nconst initialState: FeedState = {\n  status: 'IDLE',\n  error: undefined,\n  next: { limit: 10, offset: 0 },\n  posts: []\n}\n\nexport const loadFeed = createAsyncThunk('feed/load', async (_, thunk) => {\n  const state = thunk.getState() as RootState\n  if (!state.feed.next) return { next: null, results: [], count: 0, previous: null } as CareersPaginator\n\n  const response = await getCareers(state.feed.next)\n  return response.data\n})\n\nexport const createPost = createAsyncThunk('posts/create', async (data: CareerIn) => {\n  const response = await createCareer(data)\n  return response.data\n})\n\nexport const editPost = createAsyncThunk('posts/edit', async ({ id, data }: { id: string, data: CareerEdit }) => {\n  const response = await editCareer(id, data)\n  return response.data\n})\n\nexport const deletePost = createAsyncThunk('posts/delete', async (id: string) => {\n  const response = await deleteCareer(id)\n  return response.data\n})\n\nexport const feedSlice = createSlice({\n  name: 'feed',\n  initialState,\n  reducers: {\n\n  },\n  extraReducers(builder) {\n    builder\n      .addCase(loadFeed.pending, (state) => {\n        state.status = 'LOADING'\n      })\n      .addCase(loadFeed.fulfilled, (state, action) => {\n        state.status = 'SUCCEEDED'\n        const { next, results } = action.payload\n        state.posts.push(...results)\n        if (next) {\n          try {\n            const { searchParams } = new URL(next)\n            state.next = {\n              limit: parseInt(searchParams.get('limit') ?? '0') ?? 0,\n              offset: parseInt(searchParams.get('offset') ?? '0') ?? 0\n            }\n          } catch (e) {\n            state.status = 'FAILED'\n            state.error = String(e)\n          }\n        } else {\n          state.next = undefined\n        }\n      })\n      .addCase(loadFeed.rejected, (state, action) => {\n        state.status = 'FAILED'\n        state.error = action.error.message\n      })\n      .addCase(createPost.pending, (state) => {\n        state.status = 'LOADING'\n      })\n      .addCase(createPost.fulfilled, (state, action) => {\n        state.status = 'SUCCEEDED'\n        if (state.posts.length > 10) {\n          state.posts = [action.payload, ...state.posts]\n        } else {\n          state.posts.push(action.payload)\n        }\n      })\n      .addCase(createPost.rejected, (state, action) => {\n        state.status = 'FAILED'\n        state.error = action.error.message\n      })\n      .addCase(editPost.pending, (state) => {\n        state.status = 'LOADING'\n      })\n      .addCase(editPost.fulfilled, (state, action) => {\n        state.status = 'SUCCEEDED'\n        state.posts = state.posts.map(post => post.id === action.payload.id ? action.payload : post)\n      })\n      .addCase(editPost.rejected, (state, action) => {\n        state.status = 'FAILED'\n        state.error = action.error.message\n      })\n      .addCase(deletePost.pending, (state) => {\n        state.status = 'LOADING'\n      })\n      .addCase(deletePost.fulfilled, (state, action) => {\n        state.status = 'SUCCEEDED'\n        state.posts = state.posts.filter(post => post.id !== action.meta.arg)\n      })\n      .addCase(deletePost.rejected, (state, action) => {\n        state.status = 'FAILED'\n        state.error = action.error.message\n      })\n  }\n})\n\nexport default feedSlice.reducer\n","import React from \"react\";\n\ntype CreatePostFormArgs = {\n  title: string\n  setTitle: (title: string)=>void\n  content: string\n  setContent: (content: string)=>void\n}\n\nexport default function CreatePostForm({ title, content, setTitle, setContent }: CreatePostFormArgs) {\n  return (\n    <>\n      <div className=\"mt-6\">\n        <label htmlFor=\"title\">Title</label>\n        <input\n          id=\"title\"\n          type=\"text\"\n          placeholder=\"Hello world\"\n          value={title}\n          onChange={e => setTitle(e.target.value)}\n          className=\"mt-1 appearance-none rounded-sm relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-gray-500 focus:border-gray-500 focus:z-10 sm:text-sm\"\n          maxLength={64}\n          required\n        />\n      </div>\n      <div className=\"my-3\">\n        <label htmlFor=\"content\">Content</label>\n        <textarea\n          id=\"content\"\n          placeholder=\"Content Here\"\n          value={content}\n          onChange={e => setContent(e.target.value)}\n          className=\"mt-1 appearance-none rounded-sm relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-gray-500 focus:border-gray-500 focus:z-10 sm:text-sm resize-none\"\n          maxLength={512}\n          required\n        />\n      </div>\n    </>\n  )\n}\n","import React, {FormEvent} from \"react\";\nimport CreatePostForm from \"../form/CreatePostForm\";\nimport {Career} from \"../services/postsApi\";\nimport {useAppDispatch} from \"../redux/hooks\";\nimport {editPost} from \"../redux/features/feed\";\n\ntype EditPostControllerArgs = Career & {\n  dismiss: ()=>void\n}\n\nexport default function EditPostController({ dismiss, ...originalData }: EditPostControllerArgs) {\n  const [title, setTitle] = React.useState('')\n  const [content, setContent] = React.useState('')\n  const dispatch = useAppDispatch()\n\n  function resetState() {\n    setTitle(originalData.title)\n    setContent(originalData.content)\n  }\n\n  React.useEffect(resetState, [originalData.title, originalData.content])\n\n  function handleSubmit(e: FormEvent) {\n    e.preventDefault()\n    dispatch(\n      editPost(\n        {\n          id: originalData.id,\n          data: { title, content }\n        }\n      )\n    ).then(resetState)\n    dismiss()\n  }\n\n  function handleDismiss() {\n    resetState()\n    dismiss()\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <CreatePostForm\n        title={title}\n        setTitle={setTitle}\n        content={content}\n        setContent={setContent}\n      />\n\n      <section className=\"mt-4 flex justify-end\">\n        <button\n          className=\"text-black border border-black px-3 w-24\"\n          onClick={handleDismiss}\n        >\n          Cancel\n        </button>\n        <input\n          type=\"submit\"\n          value=\"SAVE\"\n          className=\"text-white bg-black border border-black px-3 ml-3 w-24 cursor-pointer\"\n        />\n      </section>\n    </form>\n  )\n}\n","import React from \"react\";\nimport {Dialog, Transition} from \"@headlessui/react\";\n\ntype StandardDialogArgs = {\n  visible: boolean\n  setVisible: (visible: boolean)=>void\n  children: any\n  title: string\n}\n\nexport default function StandardDialog({ visible, setVisible, title, children }: StandardDialogArgs) {\n  return (\n    <Transition appear show={visible} as={React.Fragment}>\n      <Dialog\n        as=\"div\"\n        className=\"fixed inset-0 z-10 overflow-y-auto\"\n        onClose={() => setVisible(false)}\n      >\n        <div className=\"min-h-screen px-4 text-center\">\n          <Transition.Child\n            as={React.Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0\"\n            enterTo=\"opacity-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100\"\n            leaveTo=\"opacity-0\"\n          >\n            <Dialog.Overlay className=\"fixed inset-0\" style={{ background: 'rgba(0, 0, 0, .8)' }}/>\n          </Transition.Child>\n\n          {/* This element is to trick the browser into centering the modal contents. */}\n          <span\n            className=\"inline-block h-screen align-middle\"\n            aria-hidden=\"true\"\n          >\n              &#8203;\n            </span>\n          <Transition.Child\n            as={React.Fragment}\n            enter=\"ease-out duration-300\"\n            enterFrom=\"opacity-0 scale-95\"\n            enterTo=\"opacity-100 scale-100\"\n            leave=\"ease-in duration-200\"\n            leaveFrom=\"opacity-100 scale-100\"\n            leaveTo=\"opacity-0 scale-95\"\n          >\n            <div className=\"inline-block w-full max-w-md p-6 my-8 overflow-hidden text-left align-middle transition-all transform bg-white shadow-xl\">\n              <Dialog.Title as=\"h3\" className=\"text-lg font-medium\">\n                {title}\n              </Dialog.Title>\n\n              {children}\n            </div>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition>\n  )\n}\n","import React from \"react\";\nimport {Career} from \"../services/postsApi\";\nimport {deletePost} from \"../redux/features/feed\";\nimport {useAppDispatch} from \"../redux/hooks\";\n\ntype DeletePostControllerArgs = Career & {\n  dismiss: ()=>void\n}\n\nexport default function DeletePostController({ dismiss, ...data }: DeletePostControllerArgs) {\n  const dispatch = useAppDispatch()\n\n  function handleDelete() {\n    dispatch(deletePost(data.id))\n    dismiss()\n  }\n\n  return (\n    <section className=\"mt-4 flex justify-end\">\n      <button\n        className=\"text-black border border-black px-3 w-24\"\n        onClick={dismiss}\n      >\n        Cancel\n      </button>\n      <button\n        className=\"text-white bg-black border border-black px-3 ml-3 w-24\"\n        onClick={handleDelete}\n      >\n        OK\n      </button>\n    </section>\n  )\n}\n","import React, {CSSProperties} from 'react';\nimport {Career} from \"../services/postsApi\";\nimport {useAppSelector} from \"../redux/hooks\";\nimport humanizeDuration from 'humanize-duration';\nimport EditPostController from \"./EditPostController\";\nimport StandardDialog from \"../utils/StandardDialog\";\nimport DeletePostController from \"./DeletePostController\";\n\ntype FeedItemArgs = Career & { style?: CSSProperties }\n\nexport default function FeedItem({ style, ...data }: FeedItemArgs) {\n  const { username, created_datetime, title, content } = data\n  const authUsername = useAppSelector(s => s.auth.username)\n  const isAuthor = username === authUsername\n  const humanDate = React.useMemo(\n    () => humanizeDuration(+ new Date(created_datetime) - Date.now(), { largest: 1, units: ['w', 'd', 'h', 'm', 's'] }),\n    [created_datetime]\n  )\n\n  const [showDelete, setShowDelete] = React.useState(false)\n  const [showEdit, setShowEdit] = React.useState(false)\n\n  function renderDeleteDialog() {\n    return (\n      <StandardDialog visible={showDelete} setVisible={setShowDelete} title={\"Are you sure you want to delete this item?\"}>\n        <DeletePostController\n          { ...data }\n          dismiss={() => setShowDelete(false)}\n        />\n      </StandardDialog>\n    )\n  }\n\n  function renderEditDialog() {\n    return (\n      <StandardDialog visible={showEdit} setVisible={setShowEdit} title={\"Edit Item\"}>\n        <EditPostController\n          { ...data }\n          dismiss={() => setShowEdit(false)}\n        />\n      </StandardDialog>\n    )\n  }\n\n  function renderAuthorButtons() {\n    return (\n      <section>\n        { showDelete && renderDeleteDialog() }\n        { showEdit && renderEditDialog() }\n        <button className=\"inline-block mr-4 cursor-pointer\" onClick={() => setShowDelete(true)}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n            <path fill=\"#FFFFFF\" d=\"M3 6v18h18v-18h-18zm5 14c0 .552-.448 1-1 1s-1-.448-1-1v-10c0-.552.448-1 1-1s1 .448 1 1v10zm5 0c0 .552-.448 1-1 1s-1-.448-1-1v-10c0-.552.448-1 1-1s1 .448 1 1v10zm5 0c0 .552-.448 1-1 1s-1-.448-1-1v-10c0-.552.448-1 1-1s1 .448 1 1v10zm4-18v2h-20v-2h5.711c.9 0 1.631-1.099 1.631-2h5.315c0 .901.73 2 1.631 2h5.712z\"/>\n          </svg>\n        </button>\n        <button className=\"inline-block cursor-pointer\" onClick={() => setShowEdit(true)}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n            <path fill=\"#FFFFFF\" d=\"M18 13.45l2-2.023v4.573h-2v-2.55zm-11-5.45h1.743l1.978-2h-3.721v2zm1.361 3.216l11.103-11.216 4.536 4.534-11.102 11.218-5.898 1.248 1.361-5.784zm1.306 3.176l2.23-.472 9.281-9.378-1.707-1.707-9.293 9.388-.511 2.169zm3.333 7.608v-2h-6v2h6zm-8-2h-3v-2h-2v4h5v-2zm13-2v2h-3v2h5v-4h-2zm-18-2h2v-4h-2v4zm2-6v-2h3v-2h-5v4h2z\"/>\n          </svg>\n        </button>\n      </section>\n    )\n  }\n\n  return (\n    <article className=\"py-2\" style={style}>\n      {/* had to do this weirdo wrapper because infinite loading is pain */}\n      <section className=\"border border-gray-200 h-full flex flex-col\">\n        <header className=\"bg-black text-white px-4 py-2 flex justify-between\">\n          <h1 className=\"font-bold capitalize\">{title}</h1>\n          { isAuthor && renderAuthorButtons() }\n        </header>\n        <section className=\"flex justify-between px-4 py-1 text-gray-500\">\n          <address className=\"not-italic\">@{username}</address>\n          <time dateTime={created_datetime}>{humanDate} ago</time>\n        </section>\n        <section className=\"px-4 py-1 overflow-ellipsis overflow-hidden flex-grow\">\n          { content }\n        </section>\n      </section>\n    </article>\n  )\n}\n","import React, {CSSProperties} from \"react\";\nimport {Career} from \"../services/postsApi\";\nimport InfiniteLoader from \"react-window-infinite-loader\";\nimport {FixedSizeList} from \"react-window\";\n\ntype FeedInfiniteListArgs = {\n  hasMore: boolean,\n  isLoadingMore: boolean,\n  items: Career[],\n  loadMore: ()=>void,\n  renderItem: (item: Career, style: CSSProperties)=>any\n}\n\nexport default function FeedInfiniteList({ hasMore, isLoadingMore, items, loadMore, renderItem }: FeedInfiniteListArgs) {\n  const itemCount = hasMore ? items.length + 1 : items.length\n  const ref = React.useRef<HTMLElement>(null)\n  const [height, setHeight] = React.useState(128)\n\n  React.useEffect(() => {\n    const timeout = setInterval(() => {\n      setHeight(ref.current?.offsetHeight || height)\n    }, 1000)\n\n    return () => clearInterval(timeout)\n  }, [height])\n\n  return (\n    <section className=\"flex-grow\" ref={ref}>\n      <InfiniteLoader\n        isItemLoaded={index => !hasMore || index < items.length}\n        loadMoreItems={isLoadingMore ? () => {} : loadMore}\n        itemCount={itemCount}\n        threshold={20}\n      >\n        {\n          (({ onItemsRendered, ref }) =>\n              <FixedSizeList\n                itemSize={191}\n                height={height}\n                width={\"100%\"}\n                itemCount={itemCount}\n                onItemsRendered={onItemsRendered}\n                ref={ref}\n              >\n                {\n                  ({ index, style }) => {\n                    const item = items[index]\n                    return !!item && renderItem(items[index], style)\n                  }\n                }\n              </FixedSizeList>\n          )\n        }\n      </InfiniteLoader>\n    </section>\n  )\n}\n","import React from \"react\";\nimport {loadFeed} from \"../redux/features/feed\";\nimport FeedItem from \"./FeedItem\";\nimport FeedInfiniteList from \"./FeedInfiniteList\";\nimport {useAppDispatch, useAppSelector} from \"../redux/hooks\";\n\nexport default function PostFeed() {\n  const { posts, next, status } = useAppSelector(s => s.feed)\n  const dispatch = useAppDispatch()\n\n  return (\n    <FeedInfiniteList\n      hasMore={!!next}\n      isLoadingMore={status === 'LOADING'}\n      items={posts}\n      loadMore={() => dispatch(loadFeed())}\n      renderItem={(post, style) => (\n        <FeedItem\n          key={post.id}\n          id={post.id}\n          created_datetime={post.created_datetime}\n          username={post.username}\n          title={post.title}\n          content={post.content}\n          style={style}\n        />\n      )}\n    />\n  )\n}\n","import React, {FormEvent} from \"react\";\nimport {useAppDispatch, useAppSelector} from \"../redux/hooks\";\nimport classnames from \"classnames\";\nimport {createPost} from \"../redux/features/feed\";\nimport {Disclosure} from '@headlessui/react'\nimport CreatePostForm from \"../form/CreatePostForm\";\n\nexport default function CreatePostController() {\n  const { username } = useAppSelector(s => s.auth)\n  const { status } = useAppSelector(s => s.feed)\n  const dispatch = useAppDispatch()\n\n  const [title, setTitle] = React.useState('')\n  const [content, setContent] = React.useState('')\n\n  // Trickery to autoclose the form's Disclosure when new content is loading\n  //   because it means that the user is scrolling down to reach new content\n  const [hasAutoclosed, setHasAutoclosed] = React.useState(true)\n  const [open, setOpen] = React.useState(true)\n\n  React.useEffect(() => {\n    if (!hasAutoclosed && open && status === 'LOADING') {\n      setOpen(false)\n      setHasAutoclosed(true)\n    }\n  }, [open, status, hasAutoclosed])\n\n  React.useEffect(() => {\n    const interval = setInterval(() => setHasAutoclosed(false), 2000)\n    return () => clearInterval(interval)\n  }, [hasAutoclosed])\n\n  function resetState() {\n    setTitle('')\n    setContent('')\n  }\n\n  function handleSubmit(e: FormEvent) {\n    e.preventDefault()\n    if (title.trim() && content.trim()) {\n      dispatch(\n        createPost({\n          title: title.trim(),\n          content: content.trim(),\n          username\n        })\n      )\n\n      resetState()\n    }\n  }\n\n  return (\n    <section className=\"border border-gray mr-4 mb-3\">\n      <Disclosure>\n        <Disclosure.Button className=\"flex justify-between w-full cursor-default\">\n          <h2 className=\"font-bold text-lg pl-3\">Whats on your mind, {username}?</h2>\n          <div className=\"flex flex-col justify-center pr-3 cursor-pointer\" onClick={() => setOpen(!open)}>\n            <span\n              className={\n                classnames(\n                  \"w-5 h-5 transition-all duration-300\",\n                  { \"transform rotate-180\": open }\n                )\n              }\n            >\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 330 330\">\n                <path id=\"XMLID_225_\" d=\"M325.607,79.393c-5.857-5.857-15.355-5.858-21.213,0.001l-139.39,139.393L25.607,79.393 c-5.857-5.857-15.355-5.858-21.213,0.001c-5.858,5.858-5.858,15.355,0,21.213l150.004,150c2.813,2.813,6.628,4.393,10.606,4.393 s7.794-1.581,10.606-4.394l149.996-150C331.465,94.749,331.465,85.251,325.607,79.393z\"/>\n              </svg>\n            </span>\n          </div>\n        </Disclosure.Button>\n        <Disclosure.Panel static>\n          { open && (\n            <form className=\"p-3\" onSubmit={handleSubmit}>\n\n              <CreatePostForm\n                title={title}\n                setTitle={setTitle}\n                content={content}\n                setContent={setContent}\n              />\n\n              <div className=\"flex justify-end\">\n                <input\n                  type=\"submit\"\n                  value=\"CREATE\"\n                  className={\n                    classnames(\n                      \"mt-3 px-8 py-2 bg-black text-white font-bold text-sm cursor-pointer transition\",\n                      {\n                        \"bg-gray-800\": !title.trim() || !content.trim()\n                      }\n                    )\n                  }\n                />\n              </div>\n            </form>\n          ) }\n        </Disclosure.Panel>\n      </Disclosure>\n    </section>\n  )\n}\n","import React from 'react';\nimport {useAppDispatch} from \"../redux/hooks\";\nimport {logout} from \"../redux/features/auth\";\nimport PostFeed from \"../feed/PostFeed\";\nimport CreatePostController from \"../feed/CreatePostController\";\n\nexport default function HomeScreen() {\n  const dispatch = useAppDispatch()\n\n\n  return (\n    <div className=\"flex justify-center h-screen\">\n      <div className=\"h-100 w-full sm:w-3/5 md:w-3/6 bg-white flex flex-col\">\n        <header className=\"text-white bg-black p-3 flex justify-between flex-grow-0 flex-shrink-0\">\n          <h1 className=\"font-bold text-lg\">CodeLeap Network</h1>\n          <button onClick={() => dispatch(logout())}>Logout</button>\n        </header>\n        <main className=\"flex-grow flex-shrink overflow-y-auto px-2 flex flex-col pt-3\">\n          <CreatePostController/>\n          <PostFeed/>\n        </main>\n      </div>\n    </div>\n  )\n}\n","import React from 'react';\nimport LoginScreen from \"./screen/LoginScreen\";\nimport {useAppSelector} from \"./redux/hooks\";\nimport * as authSlice from \"./redux/features/auth\";\nimport HomeScreen from \"./screen/HomeScreen\";\n\nfunction App() {\n  const isLoggedIn = useAppSelector(authSlice.isLoggedIn)\n  return isLoggedIn ? <HomeScreen/> : <LoginScreen/>\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\nimport auth from \"./features/auth\";\nimport feed from './features/feed'\n\nexport const store = configureStore({\n  reducer: {\n    auth,\n    feed\n  }\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}